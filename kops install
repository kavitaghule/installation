# kops install prerequisite
#1} aws configure 
#2} kubectl install
#3} kops install

#install kubectl

yum install java -y
yum install docker -y
systemctl start docker
curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
sudo install -o root -g root -m 0755 kubectl /bin/kubectl
kubectl version --client
 
#3} kops install

curl -LO https://github.com/kubernetes/kops/releases/download/$(curl -s https://api.github.com/repos/kubernetes/kops/releases/latest | grep tag_name | cut -d '"' -f 4)/kops-linux-amd64
chmod +x kops-linux-amd64
sudo mv kops-linux-amd64 /bin/kops
yum update && yum install kops
aws s3api create-bucket --bucket dev.local1 --region ap-south-1
#aws route53 create-hosted-zone --name dev.local --caller-reference 1
#aws s3 mb s3://dev.local
KOPS_STATE_STORE=s3://dev.local
kops create cluster --name=demok8scluster.k8s.local --state=s3://dev2.local  --zones=ap-south-1a,ap-south-1b,ap-south-1c --node-count=1 --node-size=t2.micro --control-plane-zones=ap-south-1a --control-plane-size=t2.micro --control-plane-volume-size=8 --node-volume-size=8 --yes
kops edit cluster myfirstcluster.k8s.local --state=s3://dev.local
#Suggestions:
 # validate cluster: kops validate cluster --wait 10m
 # list nodes: kubectl get nodes --show-labels
 # ssh to a control-plane node: ssh -i ~/.ssh/id_rsa ubuntu@
